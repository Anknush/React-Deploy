{"version":3,"sources":["components/cards/card/card-main-component.js","components/cards/cards-component.js","components/cards/search-box/search-box-component.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","movie","id","alt","name","email","CardApp","Movies","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","Response","json","user","this","filterMonster","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAWeA,EATK,SAACC,GACnB,OACE,sBAAKC,UAAU,iBAAf,UACE,qBAAKC,IAAG,+BAA0BF,EAAMG,MAAMC,GAAtC,aAAqDC,IAAI,KACjE,6BAAKL,EAAMG,MAAMG,OACjB,6BAAKN,EAAMG,MAAMI,YCJVC,EAAU,SAACR,GACtB,OACE,sBAAKC,UAAU,YAAf,UACG,IACAD,EAAMS,OAAOC,KAAI,SAACP,GAAD,OAChB,cAAC,EAAD,CAAqBA,MAAOA,GAAjBA,EAAMC,OACf,QCNGO,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACvB,uBACEC,KAAK,SACLF,YAAaA,EACbG,SAAUF,EACVZ,UAAU,aC4BCe,E,kDA9Bb,aAAe,IAAD,8BACZ,gBAYFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAXtC,EAAKC,MAAQ,CACXb,OAAQ,GACRU,YAAa,IALH,E,qDAQd,WAAqB,IAAD,OAClBI,MAAM,8CAA8CC,MAAK,SAACC,GAAD,OACvDA,EAASC,OAAOF,MAAK,SAACG,GAAD,OAAU,EAAKT,SAAS,CAAET,OAAQkB,Y,oBAM3D,WACE,MAAgCC,KAAKN,MAA7Bb,EAAR,EAAQA,OAAQU,EAAhB,EAAgBA,YACVU,EAAgBpB,EAAOqB,QAAO,SAAC3B,GAAD,OAClCA,EAAMG,KAAKyB,cAAcC,SAASb,EAAYY,kBAEhD,OACE,sBAAK9B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CAAWW,YAAY,aAAaC,aAAce,KAAKf,eACvD,cAAC,EAAD,CAASJ,OAAQoB,W,GA1BPI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f9b71581.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card-main-style.css\";\r\nexport const Card = (props) => {\r\n  return (\r\n    <div className=\"card-container\">\r\n      <img src={`https://robohash.org/${props.movie.id}?set=set2`} alt=\"\"></img>\r\n      <h1>{props.movie.name}</h1>\r\n      <h3>{props.movie.email}</h3>\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","import React from \"react\";\r\nimport \"./card-component.css\";\r\nimport Card from \"./card/card-main-component\";\r\nexport const CardApp = (props) => {\r\n  return (\r\n    <div className=\"card-main\">\r\n      {\" \"}\r\n      {props.Movies.map((movie) => (\r\n        <Card key={movie.id} movie={movie} />\r\n      ))}{\" \"}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./searc-box-styles.css\";\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n  <input\r\n    type=\"search\"\r\n    placeholder={placeholder}\r\n    onChange={handleChange}\r\n    className=\"search\"\r\n  />\r\n);\r\n","// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport React from \"react\";\nimport { CardApp } from \"./components/cards/cards-component\";\nimport { SearchBox } from \"./components/cards/search-box/search-box-component\";\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      Movies: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then((Response) =>\n      Response.json().then((user) => this.setState({ Movies: user }))\n    );\n  }\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  };\n  render() {\n    const { Movies, searchField } = this.state;\n    const filterMonster = Movies.filter((movie) =>\n      movie.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h2>Monster Roledex</h2>\n        <SearchBox placeholder=\"search-box\" handleChange={this.handleChange} />\n        <CardApp Movies={filterMonster}></CardApp>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}